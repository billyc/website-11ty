/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
.grid {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fill),
    minmax(var(--grid-min-item-size, 16rem), 1fr)
  );
  gap: var(--gutter, var(--space-s-l));
}

.grid[data-rows='masonry'] {
  grid-template-rows: masonry;
  align-items: start;
}

.grid[data-layout='50-50'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 28rem);
}
.grid[data-layout='50-50-flex'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 28rem);
}
.grid[data-layout='50-50'].border div {
	background-color: var(--color-matsim-light-1-bg);
	border: 1px solid var(--color-matsim-dark-1);
	border-radius: var(--border-radius);
	padding: var(--space-s-m);
}

.grid[data-layout='50-50-reverse'] {
	display: block;
}
@media(min-width: 800px) {
  .grid[data-layout='50-50-reverse'] {
  	display: grid;
    grid-template-columns: 1fr 1fr;
    --grid-min-item-size: clamp(16rem, 50vw, 28rem);
    grid-template-areas: "text image";
  }
  .grid[data-layout='50-50-reverse'] div:nth-child(1) {
    grid-area: image;
  }
  .grid[data-layout='50-50-reverse'] div:nth-child(2) {
    grid-area: text;
  }
}